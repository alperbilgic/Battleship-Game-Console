


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000 400FE638 
                       RCGCADC EQU              0x400FE638  ; ADC clock
    4 00000000 40038000 
                       ADC0_ACTSS
                               EQU              0x40038000  ; Sample seq (ADC0)
                                                            
    5 00000000 40038004 
                       ADC0_RIS
                               EQU              0x40038004  ; Interrupt status
    6 00000000 40038008 
                       ADC0_IM EQU              0x40038008  ; Interrupt select
    7 00000000 40038014 
                       ADC0_EMUX
                               EQU              0x40038014  ; Trigger select
    8 00000000 40038028 
                       ADC0_PSSI
                               EQU              0x40038028  ; Initiate sample
    9 00000000 40038080 
                       ADC0_SSMUX3
                               EQU              0x40038080  ; Input channel sel
                                                            ect
   10 00000000 40038084 
                       ADC0_SSCTL3
                               EQU              0x40038084  ; Sample seq contro
                                                            l
   11 00000000 40038088 
                       ADC0_SSFIFO3
                               EQU              0x40038088  ; Channel 3 read
   12 00000000 40038FC4 
                       ADC0_PC EQU              0x40038FC4  ; Sample rate
   13 00000000 4003800C 
                       ADC0_ISC
                               EQU              0x4003800C
   14 00000000         
   15 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608
   16 00000000 4002451C 
                       PORTE_DEN
                               EQU              0x4002451C
   17 00000000 4002452C 
                       PORTE_PCTL
                               EQU              0x4002452C
   18 00000000 40024420 
                       PORTE_AFSEL
                               EQU              0x40024420
   19 00000000 40024528 
                       PORTE_AMSEL
                               EQU              0x40024528
   20 00000000         
   21 00000000         
   22 00000000                 AREA             part1, CODE, READONLY
   23 00000000                 THUMB
   24 00000000         
   25 00000000                 EXPORT           get_row_col_mine
   26 00000000         
   27 00000000         get_row_col_mine



ARM Macro Assembler    Page 2 


   28 00000000         
   29 00000000         start   PROC
   30 00000000         
   31 00000000 E92D 5FF3       PUSH             {R0-R1,R4-R12,LR}
   32 00000004 4934            LDR              R1, =RCGCADC ;ADC clock on
   33 00000006 6808            LDR              R0, [R1]
   34 00000008 F040 0001       ORR              R0, R0, #0x01 ;ADC0
   35 0000000C 6008            STR              R0, [R1]
   36 0000000E BF00            NOP
   37 00000010 BF00            NOP
   38 00000012 BF00            NOP
   39 00000014         
   40 00000014 4931            LDR              R1, =RCGCGPIO ;GPIO clock on
   41 00000016 6808            LDR              R0, [R1]
   42 00000018 F040 0010       ORR              R0, R0, #0x10 ; port E 
   43 0000001C 6008            STR              R0, [R1]
   44 0000001E BF00            NOP
   45 00000020 BF00            NOP
   46 00000022 BF00            NOP
   47 00000024         
   48 00000024 492E            LDR              R1, =PORTE_AFSEL
   49 00000026 6808            LDR              R0, [R1]
   50 00000028 F040 000C       ORR              R0, R0, #0x0C 
                                                            ;  alt on for PE2-3
                                                            
   51 0000002C 6008            STR              R0, [R1]
   52 0000002E         
   53 0000002E         
   54 0000002E 492D            LDR              R1, =PORTE_DEN
   55 00000030 6808            LDR              R0, [R1]
   56 00000032 F020 000C       BIC              R0, R0, #0x0C 
                                                            ; disable for PE2-3
                                                            
   57 00000036 6008            STR              R0, [R1]
   58 00000038         
   59 00000038 492B            LDR              R1, =PORTE_AMSEL
   60 0000003A 6808            LDR              R0, [R1]
   61 0000003C F040 000C       ORR              R0, R0, #0x0C ; enable analog f
                                                            or PE2-3
   62 00000040 6008            STR              R0, [R1]
   63 00000042         
   64 00000042 492A            LDR              R1, =ADC0_ACTSS ; disable durin
                                                            g setup
   65 00000044 6808            LDR              R0, [R1]
   66 00000046 F020 0004       BIC              R0, R0, #0x04
   67 0000004A 6008            STR              R0, [R1]
   68 0000004C         
   69 0000004C 4928            LDR              R1, =ADC0_EMUX ; trigger
   70 0000004E 6808            LDR              R0, [R1]
   71 00000050 F420 6070       BIC              R0, R0, #0xF00 ;SOFTWARE
   72 00000054 6008            STR              R0, [R1]
   73 00000056         
   74 00000056 4927            LDR              R1, =ADC0_SSMUX3 ; input
   75 00000058 6808            LDR              R0, [R1]
   76 0000005A F04F 0010       MOV              R0, #0x10   ;  AIN0-1
   77 0000005E 7008            STRB             R0, [R1]
   78 00000060         
   79 00000060 4925            LDR              R1, =ADC0_SSCTL3 ; sample seq
   80 00000062 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 3 


   81 00000064 F040 0060       ORR              R0, R0, #0x060 ;(IE0, END0)
   82 00000068 6008            STR              R0, [R1]
   83 0000006A         
   84 0000006A 4924            LDR              R1, =ADC0_PC ; sample rate
   85 0000006C 6808            LDR              R0, [R1]
   86 0000006E F040 0001       ORR              R0, R0, #0x01 ; set bits 3:0 to
                                                             1 for 125k sps
   87 00000072 6008            STR              R0, [R1]
   88 00000074         
   89 00000074 491D            LDR              R1, =ADC0_ACTSS
   90 00000076 6808            LDR              R0, [R1]
   91 00000078 F040 0004       ORR              R0, R0, #0x04 ; enable seq 2
   92 0000007C 6008            STR              R0, [R1]
   93 0000007E         
   94 0000007E 4B20            LDR              R3, =ADC0_RIS 
                                                            ; interrupt address
                                                            
   95 00000080 4C20            LDR              R4, =ADC0_SSFIFO3 ; read 
   96 00000082 4A21            LDR              R2, =ADC0_PSSI ; sample sequenc
                                                            e initiate address
   97 00000084 4E21            LDR              R6,= ADC0_ISC ; interrupt clear
                                                            
   98 00000086 F04F 0700       MOV              R7, #0
   99 0000008A         
  100 0000008A 6810    Smpl    LDR              R0, [R2]
  101 0000008C F040 0004       ORR              R0, R0, #0x04 
                                                            ; set bit 3 for SS3
                                                            
  102 00000090 6010            STR              R0, [R2]    ; sampling is initi
                                                            ated
  103 00000092         
  104 00000092 6818    Cont    LDR              R0, [R3]    ; check if interrup
                                                            t happened
  105 00000094 F010 0004       ANDS             R0, R0, #4
  106 00000098 D0FB            BEQ              Cont
  107 0000009A F04F 0004       MOV              R0, #0x4
  108 0000009E 6030            STR              R0, [R6]
  109 000000A0         
  110 000000A0 6820            LDR              R0,[R4]
  111 000000A2 F04F 0147       MOV              R1, #0x47
  112 000000A6 F04F 0300       MOV              R3, #0
  113 000000AA 4288    compare CMP              R0,R1
  114 000000AC DB04            BLT              exit
  115 000000AE F103 0301       ADD              R3,#1
  116 000000B2 F101 0147       ADD              R1,#0x47
  117 000000B6 E7F8            B                compare
  118 000000B8         exit                                 ;R3 is the column n
                                                            umber between 0-63
  119 000000B8         
  120 000000B8 6820            LDR              R0,[R4]
  121 000000BA F04F 01A3       MOV              R1, #0xA3
  122 000000BE F04F 0200       MOV              R2, #0
  123 000000C2 4288    compare2
                               CMP              R0,R1
  124 000000C4 DB04            BLT              exit2
  125 000000C6 F102 0201       ADD              R2,#1
  126 000000CA F101 01A3       ADD              R1,#0xA3
  127 000000CE E7F8            B                compare2
  128 000000D0         exit2                                ;R2 is the row numb



ARM Macro Assembler    Page 4 


                                                            er between 0-31
  129 000000D0         
  130 000000D0 E8BD 5FF3       POP              {R0-R1,R4-R12,LR}
  131 000000D4 4770            BX               LR
  132 000000D6                 ENDP
  133 000000D6                 END
              00 00 400FE638 
              400FE608 
              40024420 
              4002451C 
              40024528 
              40038000 
              40038014 
              40038080 
              40038084 
              40038FC4 
              40038004 
              40038088 
              40038028 
              4003800C 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\get_row_col_mine.d -o.\objects\get_row_col_mine.o -I.
\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123
 -IC:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVIS
ION_VERSION SETA 526" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\get_r
ow_col_mine.lst get_row_col_mine.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Cont 00000092

Symbol: Cont
   Definitions
      At line 104 in file get_row_col_mine.s
   Uses
      At line 106 in file get_row_col_mine.s
Comment: Cont used once
Smpl 0000008A

Symbol: Smpl
   Definitions
      At line 100 in file get_row_col_mine.s
   Uses
      None
Comment: Smpl unused
compare 000000AA

Symbol: compare
   Definitions
      At line 113 in file get_row_col_mine.s
   Uses
      At line 117 in file get_row_col_mine.s
Comment: compare used once
compare2 000000C2

Symbol: compare2
   Definitions
      At line 123 in file get_row_col_mine.s
   Uses
      At line 127 in file get_row_col_mine.s
Comment: compare2 used once
exit 000000B8

Symbol: exit
   Definitions
      At line 118 in file get_row_col_mine.s
   Uses
      At line 114 in file get_row_col_mine.s
Comment: exit used once
exit2 000000D0

Symbol: exit2
   Definitions
      At line 128 in file get_row_col_mine.s
   Uses
      At line 124 in file get_row_col_mine.s
Comment: exit2 used once
get_row_col_mine 00000000

Symbol: get_row_col_mine
   Definitions
      At line 27 in file get_row_col_mine.s
   Uses
      At line 25 in file get_row_col_mine.s
Comment: get_row_col_mine used once
part1 00000000

Symbol: part1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 22 in file get_row_col_mine.s
   Uses
      None
Comment: part1 unused
start 00000000

Symbol: start
   Definitions
      At line 29 in file get_row_col_mine.s
   Uses
      None
Comment: start unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADC0_ACTSS 40038000

Symbol: ADC0_ACTSS
   Definitions
      At line 4 in file get_row_col_mine.s
   Uses
      At line 64 in file get_row_col_mine.s
      At line 89 in file get_row_col_mine.s

ADC0_EMUX 40038014

Symbol: ADC0_EMUX
   Definitions
      At line 7 in file get_row_col_mine.s
   Uses
      At line 69 in file get_row_col_mine.s
Comment: ADC0_EMUX used once
ADC0_IM 40038008

Symbol: ADC0_IM
   Definitions
      At line 6 in file get_row_col_mine.s
   Uses
      None
Comment: ADC0_IM unused
ADC0_ISC 4003800C

Symbol: ADC0_ISC
   Definitions
      At line 13 in file get_row_col_mine.s
   Uses
      At line 97 in file get_row_col_mine.s
Comment: ADC0_ISC used once
ADC0_PC 40038FC4

Symbol: ADC0_PC
   Definitions
      At line 12 in file get_row_col_mine.s
   Uses
      At line 84 in file get_row_col_mine.s
Comment: ADC0_PC used once
ADC0_PSSI 40038028

Symbol: ADC0_PSSI
   Definitions
      At line 8 in file get_row_col_mine.s
   Uses
      At line 96 in file get_row_col_mine.s
Comment: ADC0_PSSI used once
ADC0_RIS 40038004

Symbol: ADC0_RIS
   Definitions
      At line 5 in file get_row_col_mine.s
   Uses
      At line 94 in file get_row_col_mine.s
Comment: ADC0_RIS used once
ADC0_SSCTL3 40038084




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: ADC0_SSCTL3
   Definitions
      At line 10 in file get_row_col_mine.s
   Uses
      At line 79 in file get_row_col_mine.s
Comment: ADC0_SSCTL3 used once
ADC0_SSFIFO3 40038088

Symbol: ADC0_SSFIFO3
   Definitions
      At line 11 in file get_row_col_mine.s
   Uses
      At line 95 in file get_row_col_mine.s
Comment: ADC0_SSFIFO3 used once
ADC0_SSMUX3 40038080

Symbol: ADC0_SSMUX3
   Definitions
      At line 9 in file get_row_col_mine.s
   Uses
      At line 74 in file get_row_col_mine.s
Comment: ADC0_SSMUX3 used once
PORTE_AFSEL 40024420

Symbol: PORTE_AFSEL
   Definitions
      At line 18 in file get_row_col_mine.s
   Uses
      At line 48 in file get_row_col_mine.s
Comment: PORTE_AFSEL used once
PORTE_AMSEL 40024528

Symbol: PORTE_AMSEL
   Definitions
      At line 19 in file get_row_col_mine.s
   Uses
      At line 59 in file get_row_col_mine.s
Comment: PORTE_AMSEL used once
PORTE_DEN 4002451C

Symbol: PORTE_DEN
   Definitions
      At line 16 in file get_row_col_mine.s
   Uses
      At line 54 in file get_row_col_mine.s
Comment: PORTE_DEN used once
PORTE_PCTL 4002452C

Symbol: PORTE_PCTL
   Definitions
      At line 17 in file get_row_col_mine.s
   Uses
      None
Comment: PORTE_PCTL unused
RCGCADC 400FE638

Symbol: RCGCADC
   Definitions
      At line 3 in file get_row_col_mine.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 32 in file get_row_col_mine.s
Comment: RCGCADC used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 15 in file get_row_col_mine.s
   Uses
      At line 40 in file get_row_col_mine.s
Comment: RCGCGPIO used once
16 symbols
361 symbols in table
